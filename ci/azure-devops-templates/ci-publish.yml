parameters:
  artifacts_directory: $(System.DefaultWorkingDirectory)/.artifacts
  publish_artifacts: 'false'

steps:
# Publish test results
- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testRunTitle: 'Units Tests'
    testResultsFiles: format({0}/**/test-results/**/*.trx, {{ parameters.artifacts_directory }})
    searchFolder: ${{ parameters.artifacts_directory }}
    testResultsFormat: VSTest
    mergeTestResults: true

# Publish code coverage results
- task: PublishCodeCoverageResults@1
  displayName: 'Publish Coverage Results'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: format({0}/**/code-coverage/results.*.xml, {{ parameters.artifacts_directory }})
    reportDirectory: format({0}/**/code-coverage/results, {{ parameters.artifacts_directory }})
    additionalCodeCoverageFiles: format({0}/**/code-coverage/results/*, {{ parameters.artifacts_directory }})

# Copy generated artifact outputs
- task: CopyFiles@2
  displayName: 'Copy Files to Artifact Staging'
  inputs:
    SourceFolder: ${{ parameters.artifacts_directory }}
    Contents: '**\*'
    TargetFolder: $(Build.ArtifactStagingDirectory)

- ${{ if eq(parameters.publish_artifacts, 'true') }}:
  # Publish artifacts
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Build Artifact'
    inputs:
      artifactName: 'drop'
      targetPath: $(Build.ArtifactStagingDirectory)
